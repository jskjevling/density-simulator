package {	import flash.display.Sprite;	public class ScreenCube extends Sprite {		private var w:Number;		private var h:Number;		private var d:Number;		private var halfDepth:Number;		private var cubeColor:uint;		private var cube:Sprite;		private var t:*;		public function ScreenCube(w:Number, h:Number, d:Number, cubeColor:uint) {			t = this;			t.w=w;			t.h=h;			t.d=d;			t.halfDepth = d/2;			t.cubeColor=cubeColor;			init();		}		private function init():void {			t.cube = new Sprite();			t.addChild(cube);			//draw outer cube			t.cube.graphics.lineStyle(1,(t.cubeColor-0x444444));			t.cube.graphics.moveTo(0,0);			t.cube.graphics.lineTo(w,0);			t.cube.graphics.lineTo(w,h);			t.cube.graphics.lineTo(0,h);			t.cube.graphics.lineTo(0,0);			//draw depth line 1			t.cube.graphics.lineStyle(1,t.cubeColor);			t.cube.graphics.lineTo(halfDepth, halfDepth);			//draw back line 1			t.cube.graphics.lineStyle(1,(t.cubeColor+0x444444));			t.cube.graphics.lineTo((w-halfDepth),halfDepth);			//draw depth line 2			t.cube.graphics.lineStyle(1,t.cubeColor);			t.cube.graphics.lineTo(w,0);			//draw back line 2			t.cube.graphics.lineStyle(1,(t.cubeColor+0x444444));			t.cube.graphics.moveTo((w-halfDepth),halfDepth);			t.cube.graphics.lineTo((w-halfDepth), (h-halfDepth));			//draw depth line 3			t.cube.graphics.lineStyle(1,t.cubeColor);			t.cube.graphics.lineTo(w,h);			//draw back line 3			t.cube.graphics.lineStyle(1,(t.cubeColor+0x444444));			t.cube.graphics.moveTo((w-halfDepth), (h-halfDepth));			t.cube.graphics.lineTo(halfDepth, (h-halfDepth));			//draw depth line 4			t.cube.graphics.lineStyle(1,t.cubeColor);			t.cube.graphics.lineTo(0,h);			//draw back line 4			t.cube.graphics.lineStyle(1,(t.cubeColor+0x444444));			t.cube.graphics.moveTo(halfDepth, (h-halfDepth));			t.cube.graphics.lineTo(halfDepth, halfDepth);			//draw measurement line 1 (height)			t.cube.graphics.moveTo((halfDepth-16),(halfDepth+10));			t.cube.graphics.lineStyle(2,t.cubeColor);			t.cube.graphics.lineTo((halfDepth-6),(halfDepth+1));			t.cube.graphics.moveTo((halfDepth-16),(halfDepth+10));			t.cube.graphics.lineTo((halfDepth-16),((halfDepth*2)-20));			t.cube.graphics.moveTo((halfDepth-16),((halfDepth*2)+20));			t.cube.graphics.lineTo((halfDepth-16),(h-(halfDepth+16)));			t.cube.graphics.moveTo((halfDepth-16),(h-(halfDepth+16)));			t.cube.graphics.lineTo((halfDepth-6),(h-(halfDepth+6)));			//draw measurement line 2 (depth)			t.cube.graphics.moveTo((halfDepth-16),(h-(halfDepth+16)));			t.cube.graphics.lineTo(((halfDepth/2)+14),(h-((halfDepth/2)+((halfDepth/4)+20))));			t.cube.graphics.moveTo(((halfDepth/2)-15),(h-((halfDepth/2)+15)));			t.cube.graphics.lineTo(6,(h-36));			t.cube.graphics.lineTo(6,(h-16));			//draw measurement line 3 (width)			t.cube.graphics.moveTo((halfDepth+6),(h-(halfDepth+6)));			t.cube.graphics.lineTo((halfDepth+16),(h-(halfDepth+16)));			t.cube.graphics.lineTo(((w/2)-22),(h-(halfDepth+16)));			t.cube.graphics.moveTo(((w/2)+22),(h-(halfDepth+16)));			t.cube.graphics.lineTo((w-(halfDepth+16)),(h-(halfDepth+16)));			t.cube.graphics.lineTo((w-(halfDepth+6)),(h-(halfDepth+6)));		}	}}